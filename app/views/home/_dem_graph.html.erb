<div class="dem_graph"></div>
	<script src="https://d3js.org/d3.v3.js"></script>
	<script type="text/javascript">
		// creates the svg viewport selection, where the graph is going to live and be buit
		var width = 650
		var height = 401

		var svgContainer = d3.select(".dem_graph").append("svg")
			.attr("width", width)
			.attr("height", height);

		// var can_name = ['Clinton', 'Sanders', 'Dem_ROF', 'Carson', 'Cruz', 'Rubio', 'Trump', 'Rep_ROF']

		var data = [<%= @clin %>, <%= @sand %>, <%= @dem_rof %>]
		var lastdata	 = [<%= @clinL %>, <%= @sandL %>, <%= @dem_rofL %>]
		
		// creates the scale that the graph is going to use for the x axis
		var xaxisScale = d3.scale.ordinal()
			.domain(['Clinton', 'Sanders', 'Dem_ROF'])
			.rangeRoundBands([0, 600], .1);

		// creates the scale that the graph is going to use for the y axis
		var yaxisScale = d3.scale.linear()
			.domain([0.00, 1.00])
			.range([250, 0])
		// actually creates the axis
		var xAxis = d3.svg.axis()
			.scale(xaxisScale);

		var yAxis = d3.svg.axis()
			.scale(yaxisScale)
			.ticks(5)
			.orient("left");

		// creates an SVG group element (g) for the axis elements to be housed within and calls the xAxis function - this is what puts it on the page
		var xAxisGroup = svgContainer.append("g")
			.attr("class", "axis")
			.attr("transform", "translate(80, 330)")
			.call(xAxis);

		var yAxisGroup = svgContainer.append("g")
			.attr("class", "axis")
			.attr("transform", "translate(85, 85)")
			.call(yAxis);

		// 
		svgContainer.append("text")
			.attr("class", "title")
			.attr("x", (width / 2))
			.attr("y", 70)
			.attr('transform', 'translate(40, 0)')
			.style("text-anchor", "middle")
			.text("Democratic Party")

		var bar = svgContainer.selectAll('g')
		<% if @clin || @sand || @dem_rof == '---' %>
			.data(lastdata)
		<% else %>
			.data(data)
		<% end %>
			.enter()
			.append('g')
			.attr("transform", function(d) { return "translate(" + xAxisGroup(d) + ",0)"; });

		bar.append("rect")
		<% if @clin || @sand || @dem_rof == '---' %>
			.data(lastdata)
		<% else %>
			.data(data)
		<% end %>
			.enter()
			.append("rect")
			.attr("x", function(d, i) {
				return i * (570 / data.length); // this makes a bar with a couple pixels of padding
			})
			.attr("y", function(d) {
				return 270 - (d * 250);
			})
			.attr("width", 80)
			.attr("height", function(d) {
				return d * 250;
			})
			.attr('transform', 'translate(145, 59)');

		bar.append("text")
		<% if @clin || @sand || @dem_rof == '---' %>
			.data(lastdata)
		<% else %>
			.data(data)
		<% end %>
			.enter()
			.append("text")
	    	.attr("x", function(d, i) { return i * (570 / data.length) })
	    	.attr("y", function(d) { return 270 - (d * 250); })
	    	.attr("dy", ".75em")
	    	.text(function(d) { return d; })
	    	.attr('transform', 'translate(165, 40)')
	    	.attr('class', 'num');


	</script>
	